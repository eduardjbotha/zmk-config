/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define HOST_OS 1

#include "../helper.h"
// #include "../international_characters/config.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layers

#define DEFAULT 0
#define LAYER1 1
#define LAYER2 2
#define LAYER3 3
#define LAYER4 4

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    //behaviors {
    //    td_a: tap_dance_a {
    //        compatible = "zmk,behavior-tap-dance";
    //        label = "TAP_DANCE_A";
    //        #binding-cells = <0>;
    //        tapping-term-ms = <200>;
    //        bindings = <&a_umlaut>, <&a_accent>, <&a_grave_accent>, <&a_caret>;
    //    };
//
    //    td_e: tap_dance_e {
    //        compatible = "zmk,behavior-tap-dance";
    //        label = "TAP_DANCE_d";
    //        #binding-cells = <0>;
    //        tapping-term-ms = <200>;
    //        bindings = <&e_umlaut>, <&e_accent>, <&e_grave_accent>, <&e_caret>;
    //    };
//
    //    td_i: tap_dance_i {
    //        compatible = "zmk,behavior-tap-dance";
    //        label = "TAP_DANCE_I";
    //        #binding-cells = <0>;
    //        tapping-term-ms = <200>;
    //        bindings = <&i_umlaut>, <&i_accent>, <&i_grave_accent>, <&i_caret>;
    //    };
//
    //    td_o: tap_dance_o {
    //        compatible = "zmk,behavior-tap-dance";
    //        label = "TAP_DANCE_O";
    //        #binding-cells = <0>;
    //        tapping-term-ms = <200>;
    //        bindings = <&o_umlaut>, <&o_accent>, <&o_grave_accent>, <&o_caret>;
    //    };
//
    //    td_u: tap_dance_u {
    //        compatible = "zmk,behavior-tap-dance";
    //        label = "TAP_DANCE_U";
    //        #binding-cells = <0>;
    //        tapping-term-ms = <200>;
    //        bindings = <&u_umlaut>, <&u_accent>, <&u_grave_accent>, <&u_caret>;
    //    };
    //};

    combos {
        compatible = "zmk,combos";

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp ESCAPE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E       &kp R                   &kp T        &kp Y           &kp U       &kp I             &kp O                   &kp P
&kp A  &kp S  &mt LALT D  &mt LGUI F              &kp G        &kp H           &mt RGUI J  &mt RALT K        &kp L                   &kp SEMI
&kp Z  &kp X  &kp C       &kp V                   &kp B        &kp N           &kp M       &mt MINUS COMMA   &mt EXCLAMATION PERIOD  &mt UNDERSCORE SLASH
                          &mt LC(LS(LALT)) SPACE  &sk RCTRL    &sk LEFT_SHIFT  &to LAYER1
            >;
        };

        layer_1 {
            bindings = <
&kp ESCAPE        &kp AT        &kp POUND       &kp DOLLAR         &kp PERCENT     &kp CARET         &kp AMPERSAND         &kp STAR               &kp MINUS          &kp BACKSPACE
&kp TAB           &kp GRAVE     &kp APOSTROPHE  &kp DOUBLE_QUOTES  &kp EQUAL       &kp BACKSLASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE           &kp ENTER
&mt LGUI TILDE    &sk LCTRL     &trans          &trans             &kp DEL         &kp LEFT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RIGHT_BRACKET  &to LAYER2
                                                &to DEFAULT        &sk RALT        &sk LEFT_SHIFT    &to LAYER3
            >;
        };

        layer_2 {
            bindings = <
&kp ESCAPE       &kp F9        &kp F10  &kp F11      &kp F12           &kp KP_MULTIPLY  &kp NUMBER_7  &kp N8        &kp N9        &kp KP_MINUS
&kp TAB          &kp F5        &kp F6   &kp F7       &kp F8            &kp N0           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS
&mt LGUI TILDE   &mt LCTRL F1  &kp F2   &kp F3       &kp F4            &kp KP_DIVIDE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_ENTER
                                        &to DEFAULT  &sk RALT          &sk LEFT_SHIFT   &to LAYER1
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE       &trans      &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp PRINTSCREEN     &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END          &kp BACKSPACE
&kp TAB          &kp C_MUTE  &kp C_VOLUME_UP       &kp C_VOLUME_DOWN     &kp C_PLAY_PAUSE    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp ENTER
&mt LGUI TILDE   &sk LCTRL   &kp C_PREV            &kp C_NEXT            &trans              &trans          &trans          &trans        &trans           &to LAYER2
                                                   &to DEFAULT           &sk RALT            &sk LEFT_SHIFT  &to LAYER1
            >;
        };

//         layer_4 {
//             bindings = <
// &trans  &trans      &td_e   &trans  &trans    &trans  &td_u   &td_i   &td_o   &trans
// &td_a   &de_eszett  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
// &trans  &trans      &trans  &trans  &trans    &es_n   &trans  &trans  &trans  &es_question_mark
//                             &trans  &trans    &trans  &trans
//             >;
//         };
    };
};
